version: 2.1

jobs:
  deploy-serverless:
    docker:
      - image: circleci/node:14  # Use Node.js 14 (or your preferred version)
    steps:
      - checkout

      # Navigate to the `server` folder
      - run:
          name: Navigate to server folder
          command: cd server

      # Install Serverless Framework
      - run:
          name: Install Serverless Framework
          command: sudo npm install -g serverless

      # Restore cached dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "server/package.json" }}
            - v1-dependencies-

      # Install project dependencies
      - run:
          name: Install project dependencies
          command: npm install

      # Cache dependencies
      - save_cache:
          paths:
            - server/node_modules
          key: v1-dependencies-{{ checksum "server/package.json" }}

      # Set up AWS credentials
      - run:
          name: Configure AWS CLI
          command: |
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
            aws configure set region ${AWS_REGION}

      # Deploy the Serverless application
      - run:
          name: Deploy to AWS
          command: serverless deploy

  deploy-nextjs:
    docker:
      - image: cimg/node:20.18.2
    steps:
      - checkout
      - run:
          name: Configure npm global install path
          command: |
            mkdir -p ~/.npm-global
            npm config set prefix '~/.npm-global'
            export PATH=~/.npm-global/bin:$PATH
            echo 'export PATH=~/.npm-global/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: |
            cd ui
            npm ci
      - run:
          name: Build Next.js application
          command: |
            cd ui
            npm run build
      - run:
          name: Deploy Next.js application
          command: |
            cd ui
            npx vercel deploy --prod --token="${VERCEL_TOKEN}"

workflows:
  deploy-workflow:
    jobs:
      - deploy-serverless:
          filters:
            branches:
              only:
                - circleci-project-setup
      - deploy-nextjs:
          filters:
            branches:
              only:
                - circleci-project-setup