version: 2.1

jobs:
  deploy-serverless:
    docker:
      - image: cimg/node:20.18.2
    steps:
      - checkout
      - run:
          name: Configure npm global install path
          command: |
            mkdir ~/.npm-global
            npm config set prefix '~/.npm-global'
            export PATH=~/.npm-global/bin:$PATH
            echo 'export PATH=~/.npm-global/bin:$PATH' >> ~/.bashrc
            source ~/.bashrc
      - run:
          name: Install dependencies
          command: |
            cd server
            npm ci
      - run:
          name: Install Serverless framework and dotenv
          command: |
            cd server
            npm install -g serverless dotenv-cli
      - run:
          name: Configure AWS credentials
          command: |
            cd server
            serverless config credentials --provider aws --key "${AWS_ACCESS_KEY_ID}" --secret "${AWS_SECRET_ACCESS_KEY}" -o
      - run:
          name: Serverless package
          command: |
            cd server
            serverless package --package artifacts --verbose
      - run:
          name: Serverless deploy application
          command: |
            cd server
            serverless deploy --package artifacts --verbose

  deploy-nextjs:
    docker:
      - image: cimg/node:20.18.2
    steps:
      - checkout
      - run:
          name: Configure npm global install path
          command: |
            mkdir ~/.npm-global
            npm config set prefix '~/.npm-global'
            export PATH=~/.npm-global/bin:$PATH
            echo 'export PATH=~/.npm-global/bin:$PATH' >> ~/.bashrc
            source ~/.bashrc
      - run:
          name: Install dependencies
          command: |
            cd ui
            npm ci
      - run:
          name: Build Next.js application
          command: |
            cd ui
            npm run build
      - run:
          name: Deploy Next.js application
          command: |
            cd ui
            npm install -g vercel
            vercel deploy --prod --token="${VERCEL_TOKEN}"

workflows:
  deploy-workflow:
    jobs:
      - deploy-serverless:
          filters:
            branches:
              only:
                - circleci-project-setup
      - deploy-nextjs:
          filters:
            branches:
              only:
                - circleci-project-setup